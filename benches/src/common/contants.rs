use std::sync::OnceLock;

use libp2p::{identity::Keypair, Multiaddr};

pub static KEYS: OnceLock<[Keypair; 24]> = OnceLock::new();
pub static ADDRS: OnceLock<[Multiaddr; 24]> = OnceLock::new();
pub static DIRS: OnceLock<[String; 24]> = OnceLock::new();

pub fn init() {
    const SK0: [u8; 36] = [
        8, 2, 18, 32, 207, 2, 240, 106, 205, 214, 250, 3, 44, 107, 247, 220, 66, 85, 130, 73, 113,
        145, 167, 59, 208, 1, 191, 207, 41, 1, 59, 36, 12, 225, 226, 52,
    ];
    const SK1: [u8; 36] = [
        8, 2, 18, 32, 168, 102, 37, 83, 109, 102, 111, 127, 39, 1, 68, 245, 222, 133, 56, 135, 39,
        133, 170, 123, 148, 53, 75, 153, 241, 49, 126, 20, 164, 211, 49, 83,
    ];
    const SK2: [u8; 36] = [
        8, 2, 18, 32, 3, 116, 210, 198, 21, 100, 137, 219, 178, 247, 15, 198, 80, 42, 53, 7, 254,
        147, 47, 172, 23, 136, 6, 27, 254, 183, 117, 4, 149, 176, 128, 157,
    ];
    const SK3: [u8; 36] = [
        8, 2, 18, 32, 115, 170, 92, 69, 7, 145, 212, 108, 88, 24, 46, 79, 210, 6, 88, 113, 212,
        178, 151, 234, 199, 44, 98, 182, 2, 221, 111, 250, 104, 254, 230, 73,
    ];
    const SK4: [u8; 36] = [
        8, 2, 18, 32, 49, 242, 36, 163, 219, 88, 127, 66, 224, 255, 120, 237, 124, 193, 93, 80, 54,
        202, 187, 105, 216, 139, 180, 119, 110, 50, 158, 49, 152, 3, 156, 158,
    ];
    const SK5: [u8; 36] = [
        8, 2, 18, 32, 156, 177, 231, 48, 150, 87, 90, 226, 75, 53, 216, 228, 213, 50, 101, 20, 189,
        83, 125, 102, 44, 96, 13, 53, 111, 172, 238, 94, 53, 103, 56, 59,
    ];
    const SK6: [u8; 36] = [
        8, 2, 18, 32, 149, 159, 17, 26, 131, 177, 70, 89, 123, 155, 169, 11, 37, 55, 159, 55, 25,
        83, 66, 221, 202, 108, 221, 166, 117, 229, 237, 87, 22, 203, 12, 245,
    ];
    const SK7: [u8; 36] = [
        8, 2, 18, 32, 230, 102, 21, 193, 52, 220, 109, 21, 106, 66, 194, 190, 84, 8, 7, 154, 78,
        26, 200, 62, 9, 118, 74, 180, 13, 81, 190, 0, 75, 24, 62, 179,
    ];
    const SK8: [u8; 36] = [
        8, 2, 18, 32, 83, 219, 223, 174, 225, 69, 165, 125, 103, 167, 255, 9, 249, 193, 61, 3, 15,
        120, 96, 35, 244, 151, 114, 235, 176, 122, 117, 103, 221, 147, 31, 82,
    ];
    const SK9: [u8; 36] = [
        8, 2, 18, 32, 155, 253, 187, 55, 46, 14, 191, 189, 78, 179, 57, 70, 249, 255, 242, 116, 78,
        145, 251, 239, 114, 25, 198, 187, 115, 27, 228, 116, 61, 237, 133, 232,
    ];
    const SK10: [u8; 36] = [
        8, 2, 18, 32, 190, 171, 9, 82, 80, 121, 210, 181, 105, 158, 49, 150, 15, 139, 59, 234, 69,
        202, 188, 18, 240, 84, 4, 200, 233, 57, 185, 163, 83, 173, 96, 213,
    ];
    const SK11: [u8; 36] = [
        8, 2, 18, 32, 159, 43, 131, 18, 168, 213, 221, 99, 42, 117, 193, 125, 132, 114, 82, 201,
        31, 178, 182, 159, 17, 191, 38, 52, 113, 171, 128, 36, 63, 50, 29, 0,
    ];
    const SK12: [u8; 36] = [
        8, 2, 18, 32, 220, 58, 108, 204, 38, 87, 25, 59, 121, 156, 39, 188, 165, 120, 88, 172, 13,
        215, 213, 125, 111, 196, 204, 24, 135, 183, 210, 117, 38, 35, 254, 224,
    ];
    const SK13: [u8; 36] = [
        8, 2, 18, 32, 51, 249, 73, 143, 49, 3, 170, 101, 245, 10, 49, 47, 102, 13, 203, 11, 147,
        168, 179, 55, 0, 198, 231, 208, 152, 173, 95, 174, 104, 13, 93, 150,
    ];
    const SK14: [u8; 36] = [
        8, 2, 18, 32, 34, 4, 81, 99, 178, 0, 185, 215, 7, 161, 131, 18, 132, 160, 4, 218, 118, 180,
        47, 187, 212, 153, 63, 98, 146, 72, 3, 66, 97, 213, 156, 209,
    ];
    const SK15: [u8; 36] = [
        8, 2, 18, 32, 120, 5, 68, 64, 52, 223, 152, 241, 250, 175, 89, 119, 67, 63, 189, 146, 168,
        92, 196, 90, 41, 77, 81, 200, 210, 16, 198, 230, 178, 92, 82, 248,
    ];
    const SK16: [u8; 36] = [
        8, 2, 18, 32, 3, 105, 50, 6, 137, 17, 15, 51, 188, 99, 171, 232, 232, 200, 191, 118, 16,
        198, 215, 197, 88, 128, 97, 250, 125, 219, 7, 76, 27, 206, 103, 40,
    ];
    const SK17: [u8; 36] = [
        8, 2, 18, 32, 125, 34, 112, 252, 65, 160, 202, 55, 246, 107, 10, 4, 229, 157, 127, 9, 18,
        118, 192, 108, 108, 214, 64, 141, 63, 8, 32, 111, 100, 29, 76, 18,
    ];
    const SK18: [u8; 36] = [
        8, 2, 18, 32, 215, 228, 173, 77, 140, 92, 232, 96, 97, 92, 230, 20, 250, 75, 240, 143, 200,
        143, 55, 190, 150, 111, 49, 40, 106, 160, 119, 84, 80, 155, 133, 21,
    ];
    const SK19: [u8; 36] = [
        8, 2, 18, 32, 78, 251, 201, 18, 60, 247, 59, 114, 235, 16, 239, 140, 76, 222, 29, 178, 46,
        170, 75, 21, 164, 208, 246, 50, 189, 227, 46, 181, 125, 212, 48, 251,
    ];
    const SK20: [u8; 36] = [
        8, 2, 18, 32, 112, 113, 193, 182, 2, 43, 250, 102, 88, 81, 121, 87, 163, 205, 166, 101, 1,
        30, 151, 61, 85, 73, 154, 139, 92, 50, 228, 125, 164, 145, 32, 15,
    ];
    const SK21: [u8; 36] = [
        8, 2, 18, 32, 155, 156, 244, 237, 254, 6, 108, 215, 53, 60, 69, 0, 253, 255, 98, 37, 250,
        84, 83, 190, 252, 56, 49, 82, 164, 39, 131, 84, 120, 48, 187, 37,
    ];
    const SK22: [u8; 36] = [
        8, 2, 18, 32, 21, 207, 20, 171, 106, 150, 88, 120, 193, 191, 19, 205, 208, 216, 0, 59, 237,
        113, 217, 72, 212, 184, 84, 239, 12, 44, 27, 202, 203, 224, 37, 161,
    ];
    const SK23: [u8; 36] = [
        8, 2, 18, 32, 221, 117, 178, 58, 8, 143, 219, 143, 182, 199, 183, 204, 77, 224, 161, 61,
        104, 50, 240, 23, 80, 22, 215, 113, 227, 200, 255, 83, 7, 109, 102, 174,
    ];

    KEYS.get_or_init(|| {
        [
            Keypair::from_protobuf_encoding(&SK0).unwrap(),
            Keypair::from_protobuf_encoding(&SK1).unwrap(),
            Keypair::from_protobuf_encoding(&SK2).unwrap(),
            Keypair::from_protobuf_encoding(&SK3).unwrap(),
            Keypair::from_protobuf_encoding(&SK4).unwrap(),
            Keypair::from_protobuf_encoding(&SK5).unwrap(),
            Keypair::from_protobuf_encoding(&SK6).unwrap(),
            Keypair::from_protobuf_encoding(&SK7).unwrap(),
            Keypair::from_protobuf_encoding(&SK8).unwrap(),
            Keypair::from_protobuf_encoding(&SK9).unwrap(),
            Keypair::from_protobuf_encoding(&SK10).unwrap(),
            Keypair::from_protobuf_encoding(&SK11).unwrap(),
            Keypair::from_protobuf_encoding(&SK12).unwrap(),
            Keypair::from_protobuf_encoding(&SK13).unwrap(),
            Keypair::from_protobuf_encoding(&SK14).unwrap(),
            Keypair::from_protobuf_encoding(&SK15).unwrap(),
            Keypair::from_protobuf_encoding(&SK16).unwrap(),
            Keypair::from_protobuf_encoding(&SK17).unwrap(),
            Keypair::from_protobuf_encoding(&SK18).unwrap(),
            Keypair::from_protobuf_encoding(&SK19).unwrap(),
            Keypair::from_protobuf_encoding(&SK20).unwrap(),
            Keypair::from_protobuf_encoding(&SK21).unwrap(),
            Keypair::from_protobuf_encoding(&SK22).unwrap(),
            Keypair::from_protobuf_encoding(&SK23).unwrap(),
        ]
    });

    ADDRS.get_or_init(|| {
        std::array::from_fn(|i| format!("/ip4/127.0.0.1/tcp/{}", 1024 + i).parse().unwrap())
    });

    DIRS.get_or_init(|| {
        std::array::from_fn(|i| {
            let dir = format!("./data/node_{:02}", i);
            std::fs::create_dir_all(&dir).unwrap();
            dir
        })
    });
}
